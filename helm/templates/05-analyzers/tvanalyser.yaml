{{- if .Values.analysers.tvanalyser.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "trade.fullname" . }}-tvanalyser
  labels:
    {{- include "trade.labels" . | nindent 4 }}
    component: tvanalyser
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "trade.selectorLabels" . | nindent 6 }}
      component: tvanalyser
  template:
    metadata:
      labels:
        {{- include "trade.selectorLabels" . | nindent 8 }}
        component: tvanalyser
    spec:
      initContainers:
      - name: wait-for-rabbitmq
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          until nc -z {{ include "trade.fullname" . }}-rabbitmq 5672; do
            echo "Waiting for RabbitMQ..."
            sleep 5
          done
          echo "RabbitMQ is ready!"
      containers:
      - name: tvanalyser
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.analysers.tvanalyser.image.repository }}:{{ .Values.analysers.tvanalyser.image.tag }}"
        imagePullPolicy: {{ .Values.analysers.tvanalyser.image.pullPolicy }}
        env:
        - name: RABBITMQ_HOST
          value: {{ include "trade.rabbitmqHost" . | quote }}
        - name: WEAVIATE_URL
          value: {{ include "trade.weaviateUrl" . | quote }}
        - name: RABBITMQ_USER
          value: {{ .Values.global.rabbitmqUser | quote }}
        - name: RABBITMQ_PASS
          value: {{ .Values.global.rabbitmqPass | quote }}
        volumeMounts:
        {{- if .Values.persistence.output.enabled }}
        - name: output-volume
          mountPath: /app/output
        {{- end }}
        resources:
          {{- toYaml .Values.analysers.tvanalyser.resources | nindent 10 }}
        command: ["sh", "-c", "python -m news_scraper.analyser_trading_view"]
      volumes:
      {{- if .Values.persistence.output.enabled }}
      - name: output-volume
        persistentVolumeClaim:
          claimName: {{ include "trade.fullname" . }}-output-pvc
      {{- end }}
{{- end }}
