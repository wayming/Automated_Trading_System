name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # List files
      - name: List files
        run: |
          echo "Code checked out from GitHub"
          ls -al

      # Test
      - name: Run tests
        run: |
          echo "Running tests..."
          echo "âœ… Tests passed!"

      # Login to the container registry
      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      # Build all images using docker compose
      - name: Build all images
        run: |
          IMAGE_TAG=${IMAGE_TAG} docker compose -f docker/docker-compose-ci.yml build

      # Push all images using docker compose
      - name: Push all images
        run: |
          IMAGE_TAG=${IMAGE_TAG} docker compose -f docker/docker-compose-ci.yml push

      # Update Helm values.yaml with new image tags
      - name: Update Helm values.yaml
        run: |
          CHART_DIR="helm"
          TAG=${IMAGE_TAG}
          
          # scrapers
          for img in ivscraper tvscraper; do
            yq -i "(.scrapers.${img}.image.tag) |= \"${TAG}\"" ${CHART_DIR}/values.yaml
          done

          # analysers
          for img in ivanalyser tvanalyser; do
            yq -i "(.analysers.${img}.image.tag) |= \"${TAG}\"" ${CHART_DIR}/values.yaml
          done

          # core services
          for img in mockExecutor stockHub awsGateway newsStore; do
            yq -i "(.coreServices.${img}.image.tag) |= \"${TAG}\"" ${CHART_DIR}/values.yaml
          done

      # Commit updated Helm values.yaml back to repo
      # Use skip ci to prevent infinite loop
      - name: Commit Helm values.yaml
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add helm/values.yaml
          git commit -m "Update image tags to ${IMAGE_TAG} [skip ci]" || echo "No changes to commit"
          git push
